plugins:
  - "@typescript-eslint/eslint-plugin"
  - eslint-plugin-etc

extends:
  - plugin:@typescript-eslint/recommended-type-checked

parser: "@typescript-eslint/parser"

parserOptions:
  project: true

settings:
  import/extensions: [.js, .jsx, .ts, .tsx]
  import/parsers:
    "@typescript-eslint/parser": [.js, .jsx, .ts, .tsx]

overrides:
  - files: ["**/*.ts", "**/*.tsx"]
    settings:
      import/resolver: typescript

rules:
  "@typescript-eslint/ban-ts-comment": [0]
  "@typescript-eslint/no-explicit-any": [0]
  "@typescript-eslint/no-floating-promises": [0]
  "@typescript-eslint/no-misused-promises": [2, {checksVoidReturn: {attributes: false, arguments: false}}]
  "@typescript-eslint/no-unnecessary-type-assertion": [2, typesToIgnore: [HTMLElement]]
  "@typescript-eslint/no-unsafe-argument": [0]
  "@typescript-eslint/no-unsafe-assignment": [0]
  "@typescript-eslint/no-unsafe-call": [0]
  "@typescript-eslint/no-unsafe-member-access": [0]
  "@typescript-eslint/no-unsafe-return": [0]
  "@typescript-eslint/no-unused-vars": [2, {vars: all, args: all, caughtErrors: all, ignoreRestSiblings: false, argsIgnorePattern: ^_, varsIgnorePattern: "^_[^_]*$", caughtErrorsIgnorePattern: ^_, destructuredArrayIgnorePattern: ^_}]
  etc/no-assign-mutated-array: [2]
  etc/no-deprecated: [2]
